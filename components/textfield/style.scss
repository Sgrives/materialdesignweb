// https://material.io/guidelines/components/textfields.html


@import '../common/functions.scss';
@import '../common/variables.scss';
@import '../common/motion.scss';
@import '../common/mixins.scss';


$label__padding-top: dp(16);
$label__padding-bottom: dp(8);
$label__font-size: sp(12);

$textarea__label__extra_padding-top: dp(10);
$textarea__label__padding-bottom: dp(10);

$border-line__height: dp(1);
$border-line__focused__height: dp(2);
$border-line__bottom-padding: dp(8);

$helper-text__font-size: sp(12);

$textarea__padding-start: dp(16);


$icon-signifier__width: dp(24);
$icon-signifier__padding-end: dp(16);



.mdw-textfield {
  display: grid;
  justify-content: flex-start;
  grid-template-columns: auto 1fr auto;
  grid-template-rows: auto;
  align-items: baseline;
  flex-direction: column;
  font-size: sp(16);
  position: relative;
}
.mdw-textfield__prefix {
  grid-row: 1;
  grid-column: 1;
  padding-right: 8px;
  margin-top: calc(#{$label__padding-top} + #{$label__font-size} + #{$label__padding-bottom});
}
.mdw-textfield__suffix {
  grid-row: 1;
  grid-column: 3;
  padding-left: 8px;
  margin-top: calc(#{$label__padding-top} + #{$label__font-size} + #{$label__padding-bottom});
}

.mdw-textfield__label {
  // Default state is floating (ie/edge does not support placeholder-shown)
  position: absolute;
  order: 1;
  padding: 0;
  margin: 0;
  top: 0;

  align-self: flex-start;

  margin-top: $label__padding-top;
  height: $label__font-size;
  
  pointer-events: none; // allow clickthrough
  // color: var(--secondary-text-color);

  will-change: transform, font-size;
  
  &,
  .mdw-textfield__prefix ~ .mdw-textfield__input[mdw-value-empty]:not(:focus) ~ & {
    transform: translateY(0);
    font-size: $label__font-size;
  }
  .mdw-textfield__prefix ~ .mdw-textfield__input:placeholder-shown:not(:focus) ~ & {
    transform: translateY(0);
    font-size: $label__font-size;
  }
  transition-property: transform, font-size, grid-column-start;
  transition-timing-function: $motion-easing-standard;
  transition-duration: $motion-duration-desktop-default;
  @include allHandsets {
    transition-duration: $motion-duration-mobile-default;
  }
  @include allTablets {
    transition-duration: $motion-duration-tablet-default;
  }
  
  [mdw-textarea] > & {
    padding-top: $textarea__label__extra_padding-top;
    padding-left: $textarea__padding-start;
  }
}
.mdw-textfield__icon {
  position: absolute;
  left: 0;
  top: calc(#{$label__padding-top} + #{$label__font-size} + #{$label__padding-bottom});
  & ~ .mdw-textfield__input,
  & ~ .mdw-textfield__label,
  & ~ .mdw-textfield__border-line,
  & ~ .mdw-textfield__helper-text,
  & ~ .mdw-textfield__error-text {
    margin-left: dp(43);
  }
}

.mdw-textfield__input {
  order: 2;
  padding: 0;
  margin: 0;
  background: none;
  border: none;
  outline: none;
  grid-column: 2;
  grid-row: 1;

  min-width: 88px;

  font-size: inherit;
  font-family: Roboto, sans-serif;
  
  padding-bottom: dp(8);

  // Offset from top = LabelTopPadding + LabelText + LabelBottomPadding + 8dp
  // Using padding-top causes overflowed text (multiline)
  margin-top: calc(#{$label__padding-top} + #{$label__font-size} + #{$label__padding-bottom});

  // color: var(--primary-text-color);

  &::placeholder {
    // color: transparent;
    will-change: color;
    transition-property: color;
    transition-timing-function: $motion-easing-standard;
    transition-duration: $motion-duration-desktop-default;
    @include allHandsets {
      transition-duration: $motion-duration-mobile-default;
    }
    @include allTablets {
      transition-duration: $motion-duration-tablet-default;
    }
  }

  [mdw-textarea] > & {
    padding-left: $textarea__padding-start;
    border-style: solid;
    // border-color: var(--textfield-border-line-color);
    border-width: $border-line__height;
    border-radius: dp(4);
    
    // margin-top aligns border
    margin-top: $label__padding-top + $border-line__height;
    padding-top: calc(#{$label__font-size} + #{$label__padding-bottom} + #{$textarea__label__extra_padding-top});
    will-change: border-color;
    transition-property: border-color;
  }
}
textarea.mdw-textfield__input {
  resize: none;
  overflow-y: auto;
  &[mdw-multiline] {
    min-height: 1em;
    padding-right: 24px;
  }
}

.mdw-textfield__border-line {
  grid-column-start: 1;
  grid-column-end: 4;
  -ms-grid-column-span: 4;
  grid-row: 2;
  
  [mdw-textarea] > & {
    display: none;
  }
  order: 3;
  height: 0;
  margin-top: -$border-line__height;
  margin-bottom: $border-line__bottom-padding;
  border-top-style: solid;
  position: relative;
  box-sizing: border-box;
  pointer-events: none;
  
  // border-color: var(--textfield-border-line-color);
  border-width: $border-line__height;

  &::before,
  &::after {
    content: "";
    display: block;
    transform: scaleX(0);
    border-top-style: solid;
    border-width: $border-line__focused__height;
    margin-top: -$border-line__focused__height;
    will-change: transform;
    transition-property: transform;
  }
}

.mdw-textfield__helper-text {
  // color: var(--secondary-text-color);
}
.mdw-textfield__error-text {
  // color: transparent; // will transition when shown
  transform: translateY(-$helper-text__font-size / 4);
  .mdw-textfield__helper-text ~ & {
    position: absolute; // spacing provided by helper-text
  }
}

.mdw-textfield__helper-text,
.mdw-textfield__error-text {
  font-size: $helper-text__font-size;
  grid-row: 3;
  grid-column-start: 1;
  grid-column-end: 4;
  -ms-grid-column-span: 4;
  order: 4;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  width: 100%;
  [mdw-textarea] > & {
    padding-top: 8px;
  }
}

/* Behavior changes */
.mdw-textfield__input {
  /* Unfocused */
  &:not(:focus) {
    /* Rules must be separated for IE11 support */
    &:placeholder-shown ~ .mdw-textfield__label {
      transform: translateY($label__font-size) translateY($label__padding-bottom);
      font-size: inherit;
      // grid-column-start: 2;
      [mdw-textarea] > & {
        // Eyeballed due to lack of specs
        transform: translateY($label__font-size) translateY(-4px);
      }
    }
    &[mdw-value-empty] ~ .mdw-textfield__label {
      transform: translateY($label__font-size) translateY($label__padding-bottom);
      font-size: inherit;
      // grid-column-start: 2;
      [mdw-textarea] > & {
        // Eyeballed due to lack of specs
        transform: translateY($label__font-size) translateY(-4px);
      }
    }
  }

  // Focused
  &:focus {
    &::placeholder {
      // color: var(--textfield-input-placeholder-color__focus);
    }
    & ~ .mdw-textfield__label {
      transform: translateY(0);
      font-size: $label__font-size;
      // pointer-events: auto; // revert to default
      // color: var(--textfield-label-color__focus);
      [mdw-color="accent"] > & {
        // color: var(--textfield-label-accent-color__focus);
      }
    }

    &,
    & ~ .mdw-textfield__border-line::before {
      // border-color: var(--textfield-border-line-color__focus);
      // caret-color: var(--textfield-label-color__focus);
      [mdw-color="accent"] > & {
        // border-color: var(--textfield-border-line-accent-color__focus);
        // caret-color: var(--textfield-label-accent-color__focus);
      }
    }

    // Invalid

    &:invalid {
      // caret-color: var(--textfield-label-warn-color__focus);
      &,
      & ~ .mdw-textfield__border-line::after {
        // border-color: var(--textfield-border-line-warn-color__focus);
      }
      & ~ .mdw-textfield__label {
        // color: var(--textfield-label-warn-color__focus);
        animation-name: labelShake;
        animation-duration: 250ms;
        animation-delay: $motion-duration-desktop-default;
        @include allHandsets {
          animation-delay: $motion-duration-mobile-default;
        }
        @include allTablets {
          animation-delay: $motion-duration-tablet-default;
        }
      }
    }
    &,
    & ~ .mdw-textfield__border-line::before,
    &:invalid ~ .mdw-textfield__border-line::after {
      transform: scaleX(1);
      transition-timing-function: $motion-easing-standard;
      transition-duration: $motion-duration-desktop-default;
      @include allHandsets {
        transition-duration: $motion-duration-mobile-default;
      }
      @include allTablets {
        transition-duration: $motion-duration-tablet-default;
      }
    }
  }

  // Disabled

  &:disabled {
    // color: var(--disabled-color);
    [mdw-textarea] > & {
      // background-color: var(--divider-color);
      // border-color: var(--disabled-color);
    }
    & ~ .mdw-textfield__label {
      // color: var(--disabled-color);
    }
    & ~ .mdw-textfield__border-line {
      border-style: dotted;
      // border-color: var(--disabled-color);
    }
  }

  // Unfocused hover

  &:hover:not(:focus):not(:disabled) {
    [mdw-textarea] > & {
      // border-color: var(--textfield-border-line-color__hover);
    }
  }

  // Hover or Focus

  &:hover:not(:disabled),
  &:focus {
    [mdw-textarea] > & {
      border-width: $border-line__focused__height;
      margin-left: $border-line__height - $border-line__focused__height;
      margin-right: $border-line__height - $border-line__focused__height;
      margin-bottom: $border-line__height - $border-line__focused__height;
      margin-top: 16px;
    }
    & ~ .mdw-textfield__border-line {
      // border-color: var(--textfield-border-line-color__hover);
      border-width: $border-line__focused__height;
      margin-top: -$border-line__focused__height;
    }
  }
}

.mdw-textfield__helper-text {
  .mdw-textfield__input:disabled ~ & {
    // color: var(--disabled-color);
  }
  .mdw-textfield__input:focus:invalid ~ & {
    // color: transparent;
  }
}

.mdw-textfield__error-text {
  .mdw-textfield__input:focus:invalid ~ & {
    // color: var(--textfield-label-warn-color__focus);
    transform: translateY(0);
    will-change: transform, color;
    transition-property: transform, color;
    transition-timing-function: $motion-easing-standard;
    transition-duration: $motion-duration-desktop-default;
    @include allHandsets {
      transition-duration: $motion-duration-mobile-default;
    }
    @include allTablets {
      transition-duration: $motion-duration-tablet-default;
    }
  }
}

@keyframes labelShake {
  0% {
    transform: translateX(0);
  }
  33% {
    transform: translateX(dp(-2));
  }
  66% {
    transform: translateX(dp(-2));
  }
  100% {
    transform: translateX(0);
  }
}
