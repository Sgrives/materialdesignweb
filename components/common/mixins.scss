@mixin portraitHandsets {
  @media screen
    and (orientation:portrait)
    and (min-width: $breakpoint-portrait-handset-small)
    and (max-width: $breakpoint-portrait-handset-max - 1) {
      @content;
    }
}
@mixin landscapeHandsets {
  @media screen
    and (orientation:landscape)
    and (min-width: $breakpoint-landscape-handset-small)
    and (max-width: $breakpoint-landscape-handset-max - 1) {
      @content;
    }
}

@mixin allHandsets {
  @include portraitHandsets {
    @content;
  }
  @include landscapeHandsets {
    @content;
  }
}

@mixin allTablets {
  @media
    screen
      and (orientation:portrait)
      and (min-width: $breakpoint-portrait-tablet-small)
      and (max-width: $breakpoint-portrait-tablet-max - 1),
    screen
      and (orientation:landscape)
      and (min-width: $breakpoint-landscape-tablet-small)
      and (max-width: $breakpoint-landscape-tablet-max - 1) {
    @content;
  }
}

$light: 1;
$dark: 2;
$dark-background: 3;

@mixin themeVariables($component, $map, $color, $contrast) {
  @each $key in map-keys($map) {
    $keyValue: map-get($map, $key);
    $value: null;
    @if ($contrast == 'light') {
      $value: nth($keyValue, $light);
    } @else {
      @if ($color == 'background') {
        $value: nth($keyValue, $dark-background);
      } @else {
        $value: nth($keyValue, $dark);
      }
    }
    --#{$component}__#{$key}: $value;
  }
}