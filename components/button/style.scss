// https://material.io/guidelines/components/buttons.html#buttons-raised-buttons

@import '../common/functions.scss';
@import '../common/variables.scss';
@import '../common/motion.scss';
@import '../common/mixins.scss';

$button__external-padding: dp(8);
$button__minimum-click-target: dp(48);
$button__background-color-pressed: rgba(#999, 0.40);
$button__focus-animation-delay: 2000ms;
$button__focus-animation-duration: 1667ms;

.mdw-button {
  position: relative;
  min-width: dp(64);
  min-height: dp(36);
  padding: 0 dp(8);
  margin: 0 8px;
  border-radius: dp(2);

  color: var(--primary-text-color);
  overflow: hidden;
  transition: box-shadow 200ms $motion-easing-standard;
  z-index: 0;

  // Override browser button defaults
  box-sizing: border-box;
  background-color: transparent;
  outline: none;
  -webkit-appearance: none;
  border: none;

  // Support any HTMLElement (not just HTMLButtonElement)
  display: inline-flex;
  text-align: center;
  justify-content: center;
  align-items: center;

  // Don't override font icon properties
  &:not([mdw-icon]) {
    font-family: Roboto, sans-serif;
    font-size: sp(14);
    line-height: normal;
    text-transform: uppercase;
    word-spacing: normal;
    font-weight: 500;
  }

  // Icon properties
  &[mdw-icon] {
    border-radius: 50%;
    min-height: 1em;
    min-width: 1em;
    padding: dp(8);
    font-size: dp(24); // Internal padding provided by font
  }

  // Button Animations
  // Ripple doesn't appear until mouse-up
  // Background color transitions from hover to press

  // ::before - focus ripple
  // ::after  - press ripple

  & > .mdw-ripple,
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: -1;
  }

  &::before {
    // Background-size does not animate smoothly.
    // Focus circle: inner-radius - 10% - fully transparent
    // Scale up by 10.0 to become 100% when not focused
    background-image: radial-gradient(
      circle at center,
      transparent 10%,
      var(--button__ripple-color) 10.00001%);
    background-position: center center;
    transform: scale(10);
    transition: transform 200ms 0s, background-color 200ms 0s;
    transition-property: transform, background-color;
    transition-duration: 200ms;
    transition-delay: 0s;
    transition-timing-function: $motion-easing-standard;
    background-color: transparent;
  }

  &:active::before ,
  &:active:focus::before {
    transition-duration: $button__focus-animation-delay, 500ms;
    background-color: var(--button__press-color);
  }

  &.mdw-theme__colored {
    --button__ripple-color: unquote("rgba(var(--color), 0.26)");
    &:focus:not(:active)::before {
      background-color: unquote("rgba(var(--color), 0.12)");
    }
    &:focus:active::before,
    &:active::before {
      background-color: unquote("rgba(var(--color), 0.20)");
    }
  }

  &:focus:not(:active)::before {
    transform: scale(7.5);
    background-color: var(--button__focus-overlay);

    transition-delay: $button__focus-animation-delay, 0s;
    transition-duration: $button__focus-animation-delay, 200ms;
    animation-duration: $button__focus-animation-duration;
    animation-timing-function: $motion-easing-standard;
    animation-delay: $button__focus-animation-delay * 2;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-name: focus-pulse;
  }

  /* duration | timing-function | delay | iteration-count | direction | fill-mode | play-state | name */
  & > .mdw-ripple,
  &::after {
    background-image: radial-gradient(
      circle at center,
      var(--button__ripple-color) 10%,
      transparent 10.0001%
    );
    transform: scale(10);
    transition-property: transform, opacity;
    transition-duration: 700ms;
    opacity: 0;
  }
  &:active:not([disabled]) {
    & > .mdw-ripple,
    &::after {
      transform: scale(0);
      transition-duration: 0s;
      opacity: 1;
    }
  }

  // If using JS ripple, destroy ::after object
  &[mdw-js-ripple]::after {
    content: none
  }

  &[disabled]::before,
  &[disabled]::after {
    content: none;
  }

  // Extended touch target
  /* 
  @media (any-pointer: coarse) {
    &::after {
      content: "";
      position: absolute;
      width: 100%;
      height: $button__minimum-click-target;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
    }
  }
  */

  &[disabled],
  &.mdw-button.mdw-theme__colored[disabled], {
    color: var(--button__disabled-text-color)
  }

}

//Raised

.mdw-button[mdw-raised]:not([disabled]) {
  box-shadow: elevation(2);
  &:active {
    box-shadow: elevation(8);
    transition-duration: 0s;
  }
  @media (any-pointer: fine) {
    &:not([mdw-raised="always"]) {
      box-shadow: elevation(0);
      &:hover {
        box-shadow: elevation(2);
      }
      &:active,
      &:hover:active {
        box-shadow: elevation(8);
        transition-duration: 0s;
      }
    }
  }
}

.mdw-button.mdw-theme__filled {
  &:not([disabled]) {
    // Attribute is only to increase specificity
    --button__ripple-color: var(--button__filled-ripple-color);
  }
  &[mdw-color="primary"] {
    --button__press-color: unquote("rgb(var(--primary-700-color))");
  }
  &[mdw-color="accent"] {
    --button__press-color: unquote("rgb(var(--accent-700-color))");
  }
  &[mdw-color="warn"] {
    --button__press-color: unquote("rgb(var(--warn-700-color))");
  }
  &[disabled] {
    // Disabled filled buttons use parent's variables
    --button__disabled-text-color: inherit;
    --button__disabled-background-color: inherit;
    background-color: var(--button__disabled-background-color);
  }
}

@keyframes press-fade-out {
  to {
    opacity: 0;
  }
}

@keyframes press-fill-in {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(10.0);
  }
}
@keyframes press-fill-out {
  to {
    transform: scale(10.0);
  }
}
@keyframes focus-pulse {
  from { transform: scale(7.5); }
  to { transform: scale(8.0) }
}